name: Build Python Executables

on:   
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Set PYTHON_PATH Environment Variable
        if: ${{ matrix.runs-on == 'windows-latest' }}
        run: echo "PYTHON_PATH=$env:pythonLocation\Lib" >> $env:GITHUB_ENV

      - name: Build Windows Executable
        if: ${{ matrix.runs-on == 'windows-latest' }}
        run: pyinstaller launcher.spec --clean

      - name: Build Executable
        if: ${{ matrix.runs-on != 'windows-latest' }}
        run: PYTHON_PATH=${{ env.pythonLocation }}/lib/python3.12 pyinstaller launcher.spec --clean

      - name: Rename Executable to include OS
        env:
          original_filename: dm-scraper${{ startsWith(matrix.runs-on, 'windows') && '.exe' || ''}}
          filename: dm-scraper-${{ matrix.runs-on }}${{ startsWith(matrix.runs-on, 'windows') && '.exe' || ''}}
        run: mv dist/${{ env.original_filename }} dist/${{ env.filename }}

      - name: Zip Executable
        if: ${{ matrix.runs-on != 'windows-latest' }}
        env:
          filename: dm-scraper-${{ matrix.runs-on }}${{ startsWith(matrix.runs-on, 'windows') && '.exe' || ''}}
        run: zip dist/${{ env.filename }}.zip dist/${{ env.filename }}

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        env:
          filename: dm-scraper-${{ matrix.runs-on }}${{ startsWith(matrix.runs-on, 'windows') && '.exe' || '.zip'}}
        with:
          name: ${{ env.filename }}
          path: dist/${{env.filename}}
          retention-days: 1

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dm-scraper-windows-latest.exe
            dm-scraper-ubuntu-latest.zip
            dm-scraper-macos-latest.zip
        env:
          GITHUB_TOKEN: ${{ secrets.DM_SCRAPER_GITHUB_TOKEN }}