name: Build Python Executables

on:   
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Set PYTHON_PATH Environment Variable
        if: ${{ matrix.runs-on == 'windows-latest' }}
        run: echo "PYTHON_PATH=$env:pythonLocation\Lib" >> $env:GITHUB_ENV

      - name: Build Windows Executable
        if: ${{ matrix.runs-on == 'windows-latest' }}
        run: pyinstaller launcher.spec --clean

      - name: Build Executable
        if: ${{ !(matrix.runs-on == 'windows-latest') }}
        run: PYTHON_PATH=${{ env.pythonLocation }}/lib/python3.12 pyinstaller launcher.spec --clean
      
      - name: Rename Executable to include OS
        run: mv dist/dm-scraper${{ startsWith(matrix.runs-on, 'windows') && '.exe' || ''}}" dist/dm-scraper${{ matrix.runs-on }}${{ startsWith(matrix.runs-on, 'windows') && '.exe' || ''}}"

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: "dm-scraper-${{ matrix.runs-on }}${{ startsWith(matrix.runs-on, 'windows') && '.exe' || ''}}"
          path: dist/dm-scraper${{ startsWith(matrix.runs-on, 'windows') && '.exe' || ''}}"

  # build-windows:
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.12'

  #     - name: Install Dependencies
  #       run: pip install -r requirements.txt

  #     - name: Set PYTHON_PATH Environment Variable
  #       run: echo "PYTHON_PATH=$env:pythonLocation\Lib" >> $env:GITHUB_ENV

  #     - name: Build Windows Executable
  #       run: pyinstaller launcher.spec --clean

  #     - name: Upload Windows Executable
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dm-scraper-windows.exe
  #         path: dist/dm-scraper.exe


  # build-linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.12'

  #     - name: Install Dependencies
  #       run: pip install -r requirements.txt

  #     - name: Build Linux Executable
  #       run: PYTHON_PATH=${{ env.pythonLocation }}/lib/python3.12 pyinstaller launcher.spec --clean

  #     - name: Upload Linux Executable
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dm-scraper-linux
  #         path: dist/dm-scraper

  # build-macos:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.12'

  #     - name: Install Dependencies
  #       run: pip install -r requirements.txt

  #     - name: Build macOS Executable
  #       run: PYTHON_PATH=${{ env.pythonLocation }}/lib/python3.12 pyinstaller launcher.spec --clean

  #     - name: Upload macOS Executable
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: dm-scraper-macos
  #         path: dist/dm-scraper

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dm-scraper-windows-latest.exe
            dm-scraper-linux-latest
            dm-scraper-macos-latest
        env:
          GITHUB_TOKEN: ${{ secrets.DM_SCRAPER_GITHUB_TOKEN }}